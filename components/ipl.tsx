"use client";
/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/FbCiVRCCTDE
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Chivo } from 'next/font/google'
import { IBM_Plex_Sans } from 'next/font/google'

chivo({
  subsets: ['latin'],
  display: 'swap',
})

ibm_plex_sans({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import Image from "next/image";
import { TEAMS, Team } from "@/lib/constants";
import TeamSelector from "./TeamSelector";
import { useState } from "react";
import { useChances } from "@/hooks/useChances";
import { Icon } from "@iconify/react";
import { MatchCard } from "./MatchCard";
import { PointsTable } from "./PointsTable";

export function IPL() {
  const [selectedTeam, setSelectedTeam] = useState<Team | undefined>(undefined);

  const { isLoading, data } = useChances(selectedTeam);

  return (
    <>
      <div className="w-full bg-gradient-to-r from-[#0077B6] to-[#00A8E8] py-12 md:py-24 lg:py-32 text-white">
        <div className="container px-4 md:px-6 mx-auto">
          <div className="flex flex-col items-center text-center space-y-6">
            <Image
              alt="IPL Logo"
              height={120}
              src="https://www.iplt20.com/assets/images/ipl-logo-new-old.png"
              width={120}
            />
            <div className="space-y-2">
              <h1 className="text-3xl font-bold text-white sm:text-4xl md:text-5xl">
                IPL Playoff Scenarios
              </h1>
              <p className="text-gray-200 md:text-xl">
                Explore the playoff qualification paths for your favorite IPL
                team.
              </p>
            </div>
            <TeamSelector
              selectedTeam={selectedTeam}
              setSelectedTeam={setSelectedTeam}
            />
            <div>
              {isLoading ? (
                <Icon icon="svg-spinners:3-dots-bounce" />
              ) : selectedTeam != null ? (
                <h3 className="text-xl">
                  {data?.percentage?.toFixed(2) ?? 0}% chances of qualification.
                </h3>
              ) : null}
            </div>
          </div>
        </div>
      </div>
      {data?.percentage != null ? (
        <div className="px-4 md:px-6 py-12  mx-auto flex flex-col items-center">
          <h2 className="text-2xl font-medium mb-6">
            {data?.posibilities?.length} Possible Scenarios
          </h2>
          <div className="flex justify-center flex-col">
            <div className="flex gap-4 flex-nowrap overflow-auto w-[96vw]">
              {data?.posibilities.map((possibility, index) => (
                <div
                  key={index}
                  className="bg-white p-4 rounded-lg shadow-md flex gap-4 flex-col"
                >
                  <div>
                    <h3 className="text-lg font-medium">
                      Scenario {index + 1}
                    </h3>
                  </div>
                  <div className="flex items-center flex-col gap-2">
                    {possibility.outcome.map((outcome) => {
                      return <MatchCard key={outcome.RowNo} match={outcome} />;
                    })}
                  </div>
                  <PointsTable points={possibility.points} />
                </div>
              ))}
            </div>
          </div>
        </div>
      ) : null}
    </>
  );
}
